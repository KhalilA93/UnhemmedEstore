<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart - EliteStore</title>
    <meta name="description" content="Review your cart and checkout - EliteStore premium products">
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Tailwind CSS via CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: {
                            50: '#eff6ff',
                            100: '#dbeafe',
                            200: '#bfdbfe',
                            300: '#93c5fd',
                            400: '#60a5fa',
                            500: '#3b82f6',
                            600: '#2563eb',
                            700: '#1d4ed8',
                            800: '#1e40af',
                            900: '#1e3a8a',
                        }
                    },
                    fontFamily: {
                        'sans': ['Inter', 'system-ui', 'sans-serif'],
                        'display': ['Poppins', 'system-ui', 'sans-serif'],
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50 text-gray-900">
    <!-- Navigation -->
    <nav class="bg-white border-b border-gray-200 sticky top-0 z-40 backdrop-blur-sm bg-white/95">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <!-- Logo -->
                <div class="flex items-center">
                    <a href="/" class="flex items-center space-x-2 text-xl font-bold text-gray-900 hover:text-primary-600 transition-colors">
                        <svg class="w-8 h-8 text-primary-600" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path>
                        </svg>
                        <span class="font-display">EliteStore</span>
                    </a>
                </div>

                <!-- Desktop Navigation -->
                <div class="hidden md:flex items-center space-x-8">
                    <a href="/" class="text-gray-600 hover:text-primary-600 font-medium transition-colors">Home</a>
                    <a href="/products" class="text-gray-600 hover:text-primary-600 font-medium transition-colors">Products</a>
                    <a href="/about" class="text-gray-600 hover:text-primary-600 font-medium transition-colors">About</a>
                    <a href="/contact" class="text-gray-600 hover:text-primary-600 font-medium transition-colors">Contact</a>
                </div>

                <!-- Right side icons -->
                <div class="flex items-center space-x-4">
                    <!-- Search -->
                    <button type="button" class="p-2 text-gray-400 hover:text-gray-500 transition-colors">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </button>

                    <!-- User Account -->
                    <button type="button" class="p-2 text-gray-400 hover:text-gray-500 transition-colors">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                    </button>

                    <!-- Shopping Cart -->
                    <a href="/cart" class="relative p-2 text-primary-600 hover:text-primary-700 transition-colors">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m.9 4L7 13m0 0l-2.5 5M7 13h10m0 0l2.5 5M9 19a2 2 0 11-4 0 2 2 0 014 0zM20 19a2 2 0 11-4 0 2 2 0 014 0z"></path>
                        </svg>
                        <span class="absolute -top-1 -right-1 bg-primary-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center" id="cart-count">3</span>
                    </a>                    <!-- Mobile menu button -->
                    <button type="button" 
                            class="md:hidden p-2 text-gray-400 hover:text-gray-500 transition-colors" 
                            onclick="toggleMobileMenu()"
                            aria-label="Toggle mobile menu"
                            aria-expanded="false"
                            id="mobile-menu-button">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" id="menu-icon">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                        <svg class="w-6 h-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" id="close-icon">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>            <!-- Mobile Navigation -->
            <div id="mobile-menu" class="hidden md:hidden border-t border-gray-200 bg-white">
                <div class="px-4 py-3 space-y-3">
                    <a href="/" class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-primary-600 hover:bg-gray-50 rounded-md transition-colors">Home</a>
                    <a href="/men" class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-primary-600 hover:bg-gray-50 rounded-md transition-colors">Men's</a>
                    <a href="/women" class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-primary-600 hover:bg-gray-50 rounded-md transition-colors">Women's</a>
                    <a href="/products" class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-primary-600 hover:bg-gray-50 rounded-md transition-colors">All Products</a>
                    <a href="/about" class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-primary-600 hover:bg-gray-50 rounded-md transition-colors">About</a>
                    <a href="/contact" class="block px-3 py-2 text-base font-medium text-gray-700 hover:text-primary-600 hover:bg-gray-50 rounded-md transition-colors">Contact</a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <!-- Page Header -->
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 font-display">Shopping Cart</h1>
            <p class="text-gray-600 mt-2">Review your items and proceed to checkout</p>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">            <!-- Cart Items -->
            <div class="lg:col-span-2 space-y-6" id="cart-items-container">
                <!-- Cart items will be loaded dynamically -->
                <div id="empty-cart" class="hidden text-center py-12">
                    <svg class="w-16 h-16 mx-auto text-gray-300 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m.9 4L7 13m0 0l-2.5 5M7 13h10m0 0l2.5 5M9 19a2 2 0 11-4 0 2 2 0 014 0zM20 19a2 2 0 11-4 0 2 2 0 014 0z"></path>
                    </svg>
                    <h3 class="text-xl font-semibold text-gray-700 mb-2">Your cart is empty</h3>
                    <p class="text-gray-500 mb-6">Add some items from our collection to get started!</p>
                    <a href="/products" class="inline-flex items-center px-6 py-3 bg-primary-600 text-white font-medium rounded-lg hover:bg-primary-700 transition-colors">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                        </svg>
                        Continue Shopping
                    </a>
                </div>
            </div>                <!-- Continue Shopping -->
                <div class="pt-4">
                    <a href="/products" class="inline-flex items-center space-x-2 text-primary-600 hover:text-primary-700 font-medium">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                        </svg>
                        <span>Continue Shopping</span>
                    </a>
                </div>
            </div>

            <!-- Order Summary -->
            <div class="lg:col-span-1">
                <div class="bg-white rounded-2xl shadow-sm p-6 border border-gray-100 sticky top-24">
                    <h2 class="text-xl font-semibold text-gray-900 mb-6">Order Summary</h2>
                    
                    <div class="space-y-4 mb-6">
                        <div class="flex justify-between">
                            <span class="text-gray-600">Subtotal</span>
                            <span class="font-medium" id="subtotal">$789.97</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Shipping</span>
                            <span class="font-medium text-green-600">Free</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Tax</span>
                            <span class="font-medium" id="tax">$63.20</span>
                        </div>
                        <div class="border-t border-gray-200 pt-4">
                            <div class="flex justify-between text-lg font-bold">
                                <span>Total</span>
                                <span id="total">$853.17</span>
                            </div>
                        </div>
                    </div>

                    <!-- Promo Code -->
                    <div class="mb-6">
                        <label for="promoCode" class="block text-sm font-medium text-gray-700 mb-2">Promo Code</label>
                        <div class="flex space-x-2">
                            <input type="text" id="promoCode" placeholder="Enter code" class="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500">
                            <button class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">Apply</button>
                        </div>
                    </div>

                    <!-- Checkout Button -->
                    <button class="w-full bg-primary-600 hover:bg-primary-700 text-white py-3 px-6 rounded-lg font-medium transition-colors duration-200 flex items-center justify-center space-x-2">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
                        </svg>
                        <span>Proceed to Checkout</span>
                    </button>

                    <!-- Security Badge -->
                    <div class="mt-4 text-center">
                        <div class="inline-flex items-center space-x-2 text-sm text-gray-500">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                            </svg>
                            <span>Secure checkout</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="bg-gray-900 text-white py-12 mt-16">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
                <!-- Company Info -->
                <div class="md:col-span-2">
                    <div class="flex items-center space-x-2 mb-4">
                        <svg class="w-8 h-8 text-primary-400" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path>
                        </svg>
                        <span class="text-2xl font-bold font-display">EliteStore</span>
                    </div>
                    <p class="text-gray-300 mb-4 max-w-md">Your premium destination for quality products and exceptional service. We're committed to bringing you the finest selection of products that enhance your lifestyle.</p>
                </div>
                
                <!-- Quick Links -->
                <div>
                    <h3 class="text-lg font-semibold mb-4">Quick Links</h3>
                    <ul class="space-y-2">
                        <li><a href="/" class="text-gray-300 hover:text-white transition-colors">Home</a></li>
                        <li><a href="/products" class="text-gray-300 hover:text-white transition-colors">Products</a></li>
                        <li><a href="/about" class="text-gray-300 hover:text-white transition-colors">About</a></li>
                        <li><a href="/contact" class="text-gray-300 hover:text-white transition-colors">Contact</a></li>
                    </ul>
                </div>
                
                <!-- Contact Info -->
                <div>
                    <h3 class="text-lg font-semibold mb-4">Contact</h3>
                    <div class="space-y-2 text-gray-300">
                        <p>Email: info@elitestore.com</p>
                        <p>Phone: (555) 123-4567</p>
                        <div class="flex space-x-4 mt-4">
                            <a href="#" class="text-gray-300 hover:text-white transition-colors">
                                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.611 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"/>
                                </svg>
                            </a>
                            <a href="#" class="text-gray-300 hover:text-white transition-colors">
                                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z"/>
                                </svg>
                            </a>
                            <a href="#" class="text-gray-300 hover:text-white transition-colors">
                                <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.097.118.112.221.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.754-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24.009c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001.012.001z"/>
                                </svg>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="border-t border-gray-800 mt-8 pt-8 text-center">
                <p class="text-gray-400">&copy; 2025 EliteStore. All rights reserved.</p>
            </div>
        </div>
    </footer>    <!-- JavaScript -->
    <script>        function toggleMobileMenu() {
            const menu = document.getElementById('mobile-menu');
            const menuButton = document.getElementById('mobile-menu-button');
            const menuIcon = document.getElementById('menu-icon');
            const closeIcon = document.getElementById('close-icon');
            
            menu.classList.toggle('hidden');
            
            // Update ARIA attributes
            const isOpen = !menu.classList.contains('hidden');
            menuButton.setAttribute('aria-expanded', isOpen);
            
            // Toggle icons
            if (isOpen) {
                menuIcon.classList.add('hidden');
                closeIcon.classList.remove('hidden');
            } else {
                menuIcon.classList.remove('hidden');
                closeIcon.classList.add('hidden');
            }
        }

        // Close mobile menu when clicking outside
        document.addEventListener('click', function(event) {
            const menu = document.getElementById('mobile-menu');
            const menuButton = event.target.closest('#mobile-menu-button');
            const menuContent = event.target.closest('#mobile-menu');
            
            if (!menuButton && !menuContent && !menu.classList.contains('hidden')) {
                closeMobileMenu();
            }
        });

        // Close mobile menu when clicking on links
        document.querySelectorAll('#mobile-menu a').forEach(link => {
            link.addEventListener('click', function() {
                closeMobileMenu();
            });
        });

        // Close mobile menu with ESC key
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                const menu = document.getElementById('mobile-menu');
                if (!menu.classList.contains('hidden')) {
                    closeMobileMenu();
                }
            }
        });

        // Helper function to close mobile menu
        function closeMobileMenu() {
            const menu = document.getElementById('mobile-menu');
            const menuButton = document.getElementById('mobile-menu-button');
            const menuIcon = document.getElementById('menu-icon');
            const closeIcon = document.getElementById('close-icon');
            
            menu.classList.add('hidden');
            menuButton.setAttribute('aria-expanded', 'false');
            menuIcon.classList.remove('hidden');
            closeIcon.classList.add('hidden');
        }

        // Cart Management System
        class CartManager {
            constructor() {
                this.cart = this.loadCart();
                this.init();
            }

            init() {
                this.renderCart();
                this.updateCartCount();
                this.updateCartTotals();
            }            loadCart() {
                const cartData = localStorage.getItem('cart');
                if (!cartData) return {};
                
                try {
                    const parsed = JSON.parse(cartData);
                    
                    // Handle old array format - convert to new object format
                    if (Array.isArray(parsed)) {
                        console.log('Converting old cart format to new format');
                        const newCart = {};
                        parsed.forEach((item, index) => {
                            const key = `${item.id || index}-default-default`;
                            newCart[key] = {
                                id: item.id || `item-${index}`,
                                name: item.name,
                                price: parseFloat(item.price),
                                quantity: item.quantity || 1,
                                images: item.image ? [item.image] : ['/images/placeholder.svg'],
                                description: item.description || '',
                                selectedSize: null,
                                selectedColor: null,
                                cartKey: key
                            };
                        });
                        
                        // Save converted cart
                        localStorage.setItem('cart', JSON.stringify(newCart));
                        return newCart;
                    }
                    
                    // New object format
                    return parsed;
                } catch (e) {
                    console.error('Error loading cart:', e);
                    return {};
                }
            }

            saveCart() {
                localStorage.setItem('cart', JSON.stringify(this.cart));
            }

            addToCart(product, quantity = 1, selectedSize = null, selectedColor = null) {
                const key = `${product.id}-${selectedSize || 'default'}-${selectedColor || 'default'}`;
                
                if (this.cart[key]) {
                    this.cart[key].quantity += quantity;
                } else {
                    this.cart[key] = {
                        ...product,
                        quantity: quantity,
                        selectedSize: selectedSize,
                        selectedColor: selectedColor,
                        cartKey: key
                    };
                }
                
                this.saveCart();
                this.renderCart();
                this.updateCartCount();
                this.updateCartTotals();
            }

            updateQuantity(cartKey, change) {
                if (this.cart[cartKey]) {
                    this.cart[cartKey].quantity += change;
                    
                    if (this.cart[cartKey].quantity <= 0) {
                        this.removeItem(cartKey);
                        return;
                    }
                    
                    this.saveCart();
                    this.renderCart();
                    this.updateCartCount();
                    this.updateCartTotals();
                }
            }

            removeItem(cartKey) {
                if (this.cart[cartKey]) {
                    delete this.cart[cartKey];
                    this.saveCart();
                    this.renderCart();
                    this.updateCartCount();
                    this.updateCartTotals();
                    
                    // Show toast notification
                    this.showToast('Item removed from cart', 'info');
                }
            }

            clearCart() {
                this.cart = {};
                this.saveCart();
                this.renderCart();
                this.updateCartCount();
                this.updateCartTotals();
            }

            renderCart() {
                const container = document.getElementById('cart-items-container');
                const emptyCart = document.getElementById('empty-cart');
                const cartKeys = Object.keys(this.cart);

                if (cartKeys.length === 0) {
                    emptyCart.classList.remove('hidden');
                    // Hide checkout section if cart is empty
                    const checkoutSection = document.querySelector('.lg\\:col-span-1');
                    if (checkoutSection) {
                        checkoutSection.style.display = 'none';
                    }
                    return;
                } else {
                    emptyCart.classList.add('hidden');
                    const checkoutSection = document.querySelector('.lg\\:col-span-1');
                    if (checkoutSection) {
                        checkoutSection.style.display = 'block';
                    }
                }

                // Clear existing items (except empty cart div)
                const existingItems = container.querySelectorAll('.cart-item');
                existingItems.forEach(item => item.remove());

                // Render each cart item
                cartKeys.forEach(cartKey => {
                    const item = this.cart[cartKey];
                    const itemElement = this.createCartItemElement(item);
                    container.insertBefore(itemElement, emptyCart);
                });
            }

            createCartItemElement(item) {
                const div = document.createElement('div');
                div.className = 'cart-item bg-white rounded-2xl shadow-sm p-6 border border-gray-100';
                
                const sizeColorInfo = (item.selectedSize || item.selectedColor) ? 
                    `<div class="text-xs text-gray-500 mt-1">
                        ${item.selectedSize ? `Size: ${item.selectedSize}` : ''}
                        ${item.selectedSize && item.selectedColor ? ' • ' : ''}
                        ${item.selectedColor ? `Color: ${item.selectedColor}` : ''}
                    </div>` : '';

                div.innerHTML = `
                    <div class="flex items-center space-x-4">
                        <div class="w-20 h-20 bg-gray-100 rounded-lg overflow-hidden">
                            <img src="${item.images && item.images[0] ? item.images[0] : '/images/placeholder.svg'}" 
                                 alt="${item.name}" class="w-full h-full object-cover">
                        </div>
                        <div class="flex-1">
                            <h3 class="text-lg font-semibold text-gray-900">${item.name}</h3>
                            <p class="text-gray-600 text-sm">${item.description || ''}</p>
                            ${sizeColorInfo}
                            <div class="flex items-center space-x-4 mt-3">
                                <div class="flex items-center border border-gray-300 rounded-lg">
                                    <button class="px-3 py-1 text-gray-600 hover:text-gray-900" 
                                            onclick="cartManager.updateQuantity('${item.cartKey}', -1)">-</button>
                                    <span class="px-3 py-1 border-x border-gray-300">${item.quantity}</span>
                                    <button class="px-3 py-1 text-gray-600 hover:text-gray-900" 
                                            onclick="cartManager.updateQuantity('${item.cartKey}', 1)">+</button>
                                </div>
                                <span class="text-lg font-bold text-primary-600">$${(item.price * item.quantity).toFixed(2)}</span>
                                <button class="text-red-600 hover:text-red-700 ml-auto" 
                                        onclick="cartManager.removeItem('${item.cartKey}')">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                    </svg>
                                </button>
                            </div>
                        </div>
                    </div>
                `;
                
                return div;
            }

            updateCartTotals() {
                let subtotal = 0;
                Object.values(this.cart).forEach(item => {
                    subtotal += item.price * item.quantity;
                });
                
                const tax = subtotal * 0.08; // 8% tax
                const total = subtotal + tax;
                
                const subtotalElement = document.getElementById('subtotal');
                const taxElement = document.getElementById('tax');
                const totalElement = document.getElementById('total');
                
                if (subtotalElement) subtotalElement.textContent = `$${subtotal.toFixed(2)}`;
                if (taxElement) taxElement.textContent = `$${tax.toFixed(2)}`;
                if (totalElement) totalElement.textContent = `$${total.toFixed(2)}`;
            }            updateCartCount() {
                const count = Object.values(this.cart).reduce((sum, item) => sum + item.quantity, 0);
                const cartCountElement = document.getElementById('cart-count');
                if (cartCountElement) {
                    cartCountElement.textContent = count;
                }
                
                // Dispatch event for other pages to listen
                window.dispatchEvent(new CustomEvent('cartUpdated', { 
                    detail: { count, cart: this.cart }
                }));
            }getTotalItems() {
                return Object.values(this.cart).reduce((sum, item) => sum + item.quantity, 0);
            }

            getSubtotal() {
                return Object.values(this.cart).reduce((sum, item) => sum + (item.price * item.quantity), 0);
            }

            showToast(message, type = 'info') {
                // Simple toast notification
                const toast = document.createElement('div');
                toast.className = `fixed top-4 right-4 z-50 px-4 py-2 rounded-lg text-white ${
                    type === 'success' ? 'bg-green-500' : 
                    type === 'error' ? 'bg-red-500' : 
                    type === 'warning' ? 'bg-yellow-500' : 'bg-blue-500'
                }`;
                toast.textContent = message;
                
                document.body.appendChild(toast);
                
                setTimeout(() => {
                    toast.remove();
                }, 3000);
            }
        }

        // Initialize cart manager
        const cartManager = new CartManager();

        // Expose globally for other scripts
        window.cartManager = cartManager;

        // Demo function to add items to cart for testing
        function addDemoItems() {
            const demoItems = [
                {
                    id: 'demo-shirt',
                    name: 'Classic Cotton T-Shirt',
                    price: 29.99,
                    description: 'Comfortable cotton t-shirt',
                    images: ['/images/placeholder.svg']
                },
                {
                    id: 'demo-jeans',
                    name: 'Denim Jeans',
                    price: 79.99,
                    description: 'Premium denim jeans',
                    images: ['/images/placeholder.svg']
                }
            ];
            
            demoItems.forEach(item => {
                cartManager.addToCart(item, 1);
            });
            
            console.log('Demo items added to cart!');
        }

        // Expose demo function for testing
        window.addDemoItems = addDemoItems;

        // Debug functions for testing
        window.clearCartStorage = function() {
            localStorage.removeItem('cart');
            location.reload();
        };
        
        window.debugCart = function() {
            console.log('Cart localStorage:', localStorage.getItem('cart'));
            console.log('Parsed cart:', cartManager.cart);
            console.log('Cart count:', cartManager.getTotalItems ? cartManager.getTotalItems() : Object.values(cartManager.cart).reduce((sum, item) => sum + item.quantity, 0));
        };
        
        console.log('🛒 Cart System Ready!');
        console.log('Try: addDemoItems() to add demo items to cart');

        // Listen for cart updates from other pages
        window.addEventListener('cartUpdated', function(event) {
            cartManager.cart = event.detail.cart || cartManager.loadCart();
            cartManager.updateCartCount();
        });
        
        // Listen for storage changes (for cross-tab updates)
        window.addEventListener('storage', function(event) {
            if (event.key === 'cart') {
                cartManager.cart = cartManager.loadCart();
                cartManager.updateCartCount();
            }
        });
    </script>
</body>
</html>
