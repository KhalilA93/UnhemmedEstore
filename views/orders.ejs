<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Orders - Unhemmed</title>
    <meta name="description" content="View your order history and track orders">
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="bg-gray-50">
    <!-- Navigation -->
    <%- include('partials/navigation') %>
    
    <div class="container mx-auto px-4 py-8">
        <div class="max-w-6xl mx-auto">
            <h1 class="text-3xl font-bold text-gray-900 mb-8">My Orders</h1>
            
            <!-- Orders List -->
            <div id="ordersList" class="space-y-6">
                <!-- Orders will be loaded here -->
            </div>
            
            <!-- Empty State -->
            <div id="emptyState" class="text-center py-12 hidden">
                <i class="fas fa-box text-6xl text-gray-300 mb-4"></i>
                <h3 class="text-xl font-medium text-gray-900 mb-2">No orders yet</h3>
                <p class="text-gray-600 mb-6">When you place your first order, it will appear here.</p>
                <a href="/products" class="bg-blue-600 text-white px-6 py-3 rounded-md hover:bg-blue-700 transition-colors">
                    Start Shopping
                </a>
            </div>
            
            <!-- Loading State -->
            <div id="loadingState" class="text-center py-12">
                <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
                <p class="text-gray-600 mt-4">Loading your orders...</p>
            </div>
        </div>
    </div>
    
    <!-- Scripts -->
    <script src="/js/auth.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            if (!window.authManager || !window.authManager.isAuthenticated()) {
                window.location.href = '/login';
                return;
            }
            
            await loadOrders();
        });
        
        async function loadOrders() {
            try {
                const response = await window.authManager.makeRequest('/api/orders');
                const orders = response.data || [];
                
                const ordersList = document.getElementById('ordersList');
                const emptyState = document.getElementById('emptyState');
                const loadingState = document.getElementById('loadingState');
                
                loadingState.classList.add('hidden');
                
                if (orders.length === 0) {
                    emptyState.classList.remove('hidden');
                    return;
                }
                
                ordersList.innerHTML = orders.map(order => `
                    <div class="bg-white rounded-lg shadow-md p-6">
                        <div class="flex justify-between items-start mb-4">
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900">Order #${order._id}</h3>
                                <p class="text-gray-600">Placed on ${new Date(order.createdAt).toLocaleDateString()}</p>
                            </div>
                            <div class="text-right">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(order.orderStatus)}">
                                    ${order.orderStatus || 'Processing'}
                                </span>
                                <p class="text-lg font-semibold text-gray-900 mt-1">$${order.totalPrice?.toFixed(2) || '0.00'}</p>
                            </div>
                        </div>
                        
                        <div class="border-t pt-4">
                            <div class="space-y-3">
                                ${order.orderItems?.map(item => `
                                    <div class="flex items-center space-x-4">
                                        <img src="${item.image}" alt="${item.name}" class="w-16 h-16 object-cover rounded">
                                        <div class="flex-1">
                                            <h4 class="font-medium text-gray-900">${item.name}</h4>
                                            <p class="text-gray-600">Qty: ${item.qty} Ã— $${item.price?.toFixed(2) || '0.00'}</p>
                                        </div>
                                        <div class="text-right">
                                            <p class="font-medium text-gray-900">$${((item.qty || 1) * (item.price || 0)).toFixed(2)}</p>
                                        </div>
                                    </div>
                                `).join('') || ''}
                            </div>
                        </div>
                        
                        <div class="border-t pt-4 mt-4 flex justify-between items-center">
                            <div class="flex space-x-4">
                                ${order.orderStatus !== 'cancelled' && order.orderStatus !== 'delivered' ? `
                                    <button onclick="cancelOrder('${order._id}')" class="text-red-600 hover:text-red-700 font-medium">
                                        Cancel Order
                                    </button>
                                ` : ''}
                            </div>
                            <button onclick="viewOrderDetails('${order._id}')" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors">
                                View Details
                            </button>
                        </div>
                    </div>
                `).join('');
                
            } catch (error) {
                console.error('Failed to load orders:', error);
                document.getElementById('loadingState').innerHTML = `
                    <div class="text-center py-12">
                        <i class="fas fa-exclamation-triangle text-6xl text-red-300 mb-4"></i>
                        <h3 class="text-xl font-medium text-gray-900 mb-2">Failed to load orders</h3>
                        <p class="text-gray-600 mb-6">There was an error loading your orders. Please try again.</p>
                        <button onclick="loadOrders()" class="bg-blue-600 text-white px-6 py-3 rounded-md hover:bg-blue-700 transition-colors">
                            Retry
                        </button>
                    </div>
                `;
            }
        }
        
        function getStatusColor(status) {
            switch (status) {
                case 'processing':
                    return 'bg-yellow-100 text-yellow-800';
                case 'shipped':
                    return 'bg-blue-100 text-blue-800';
                case 'delivered':
                    return 'bg-green-100 text-green-800';
                case 'cancelled':
                    return 'bg-red-100 text-red-800';
                default:
                    return 'bg-gray-100 text-gray-800';
            }
        }
        
        async function cancelOrder(orderId) {
            if (!confirm('Are you sure you want to cancel this order?')) {
                return;
            }
            
            try {
                const response = await window.authManager.makeRequest(`/api/orders/${orderId}`, 'DELETE');
                if (response.success) {
                    alert('Order cancelled successfully');
                    await loadOrders();
                } else {
                    alert('Failed to cancel order: ' + response.message);
                }
            } catch (error) {
                alert('Error cancelling order: ' + error.message);
            }
        }
        
        function viewOrderDetails(orderId) {
            // For now, just scroll to the order or could open a modal
            alert('Order details feature coming soon!');
        }
    </script>
</body>
</html>
